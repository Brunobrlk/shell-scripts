#!/bin/bash

# Author: Bruno Guimarães
# Description: Creates a shell script with a customizable base structure
# Version: 2.0
# Last Updated: 2025-06-11

# ─── PARSE TEMPLATE GENERATOR FLAGS ─────────────────────────────
INCLUDE_USAGE=false
INCLUDE_ARGS=false
INCLUDE_OPTS=false

while [[ $# -gt 0 ]]; do
  case "$1" in
    -u|--usage)
      INCLUDE_USAGE=true
      INCLUDE_OPTS=true  # Ensure usage is callable
      ;;
    -a|--args)
      INCLUDE_ARGS=true
      ;;
    -o|--opts)
      INCLUDE_OPTS=true
      ;;
    -f|--full)
      INCLUDE_USAGE=true
      INCLUDE_ARGS=true
      INCLUDE_OPTS=true
      ;;
    -h|--help)
      cat <<EOF
Usage: $(basename "$0") [options] <file_name>

Options:
  -u, --usage       Include a usage function (auto-includes -o)
  -a, --args        Include argument validation
  -o, --opts        Include option parsing
  -f, --full        Include all of the above
  -h, --help        Show this help message

Examples:
  $(basename "$0") my_script.sh
  $(basename "$0") -f my_script.sh
EOF
      exit 0
      ;;
    -*)
      echo "Unknown flag: $1"
      exit 1
      ;;
    *)
      break
      ;;
  esac
  shift
done

# ─── VALIDATE TARGET FILENAME ───────────────────────────────────
if [[ $# -eq 0 ]]; then
  echo "Error: Missing <file_name>. Use -h for help."
  exit 1
fi

filename="$1"

# ─── TEMPLATE BUILDING ──────────────────────────────────────────

header='#!/bin/bash

# Author: Bruno Guimarães
# Description: Brief description of what the script does
# Version: 1.0
# Last Updated: YYYY-MM-DD
'

usage_func='
# ─── USAGE FUNCTION ─────────────────────────────────────────────
usage() {
  cat <<EOF
Usage: $(basename "$0") [options] <args>

Description:
  Describe what your script does here.

Options:
  -h, --help        Show this help message

Examples:
  $(basename "$0") --example
EOF
  exit 0
}
'

opt_parsing='
# ─── OPTION PARSING ─────────────────────────────────────────────
while [[ $# -gt 0 ]]; do
  case "$1" in
    -h|--help)
      usage
      ;;
    # Add more options here
    -*)
      echo "Unknown option: $1"
      usage
      ;;
    *)
      break
      ;;
  esac
  shift
done
'

arg_check='
# ─── ARGUMENT VALIDATION ────────────────────────────────────────
if [[ $# -eq 0 ]]; then
  echo "Error: Missing required arguments. Use -h for help."
  exit 1
fi
'

main='
# ─── MAIN SCRIPT LOGIC ──────────────────────────────────────────
# Replace this with your actual script logic
echo "Hello, World!"
'

# Build script content dynamically
script_code="$header"

if $INCLUDE_USAGE; then
  script_code+="$usage_func"
fi

if $INCLUDE_OPTS; then
  script_code+="$opt_parsing"
fi

if $INCLUDE_ARGS; then
  script_code+="$arg_check"
fi

script_code+="$main"

# ─── WRITE TO FILE ──────────────────────────────────────────────
echo "$script_code" > "$filename"
chmod +x "$filename"
lvim "$filename"

